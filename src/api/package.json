{
  "name": "oceanacademy-api",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "PORT=8080 NODE_ENV=development nodemon --watch src -e ts,tsx --exec ts-node src/index.ts",
    "build": "PORT=3000 NODE_ENV=production tsc",
    "docker-create": "doctl k8s cluster create --region fra1 oceanacademy-api --wait && doctl kubernetes cluster kubeconfig save oceanacademy-api",
    "docker-build": "docker build -t neutrino/oceanacademy-api . --no-cache",
    "docker-run": "docker run --rm -it -p 3000:3000 neutrino/oceanacademy-api",
    "docker-push": "doctl registry login && docker tag neutrino/oceanacademy-api registry.digitalocean.com/neutrino/oceanacademy-api && docker push registry.digitalocean.com/neutrino/oceanacademy-api",
    "docker-patch": "doctl registry kubernetes-manifest | kubectl --context do-fra1-oceanacademy-api apply -f - && kubectl --context do-fra1-oceanacademy-api patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"registry-neutrino\"}]}'",
    "docker-secrets": "kubectl --context do-fra1-oceanacademy-api create secret generic person --from-env-file=.env",
    "docker-deploy": "kubectl --context do-fra1-oceanacademy-api apply -f kubernetesDeployment.json",
    "docker-serve": "kubectl --context do-fra1-oceanacademy-api apply -f kubernetesService.json",
    "docker-restart": "kubectl --context do-fra1-oceanacademy-api delete pods -l app=oceanacademy-api",
    "docker-logs": "kubectl --context do-fra1-oceanacademy-api logs --timestamps -l app=oceanacademy-api",
    "docker-update": "yarn run docker-build && yarn run docker-push && yarn run docker-restart",
    "test": "jest --runInBand --verbose",
    "coverage": "jest --runInBand --collectCoverage"
  },
  "dependencies": {
    "@koa/cors": "^3.1.0",
    "@koa/router": "^9.0.1",
    "@sendgrid/mail": "^7.1.1",
    "@typegoose/typegoose": "^7.2.0",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "chalk": "^4.0.0",
    "class-transformer": "^0.2.3",
    "class-validator": "^0.12.2",
    "dayjs": "^1.8.28",
    "dotenv": "^8.2.0",
    "jsonwebtoken": "^8.5.1",
    "koa": "^2.12.0",
    "koa-bodyparser": "^4.3.0",
    "koa-helmet": "^5.2.0",
    "mongoose": "^5.9.18",
    "rate-limiter-flexible": "^2.1.6",
    "reflect-metadata": "^0.1.13",
    "speakingurl": "^14.0.1",
    "winston": "^3.2.1"
  },
  "devDependencies": {
    "@shelf/jest-mongodb": "^1.1.5",
    "@types/axios": "^0.14.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/jest": "^25.2.3",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/koa": "^2.11.3",
    "@types/koa-bodyparser": "^4.3.0",
    "@types/koa-helmet": "^5.2.0",
    "@types/koa__cors": "^3.0.1",
    "@types/koa__router": "^8.0.2",
    "@types/mongodb": "^3.5.20",
    "@types/mongoose": "^5.7.22",
    "@types/node": "^14.0.11",
    "@types/speakingurl": "^13.0.2",
    "@types/winston": "^2.4.4",
    "axios-mock-adapter": "^1.18.1",
    "jest": "^26.0.1",
    "jest-extended": "^0.11.5",
    "nodemon": "^2.0.4",
    "prettier": "^2.0.5",
    "supertest": "^4.0.2",
    "ts-jest": "^26.1.0",
    "ts-node": "^8.10.2",
    "typescript": "^3.9.5"
  },
  "jest": {
    "testEnvironment": "node"
  }
}
